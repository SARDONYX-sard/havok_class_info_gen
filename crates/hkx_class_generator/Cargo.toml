[package]
name = "hkx_class_generator"
edition = "2021"
authors.workspace = true
version.workspace = true
license.workspace = true
description.workspace = true
repository.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
bitflags = { workspace = true }
convert_case = { workspace = true }
indexmap = { workspace = true }
jwalk = { workspace = true }
nom = { workspace = true }
num-derive = { workspace = true }
num-traits = { workspace = true }
parse-display = { workspace = true }
parse_int = { workspace = true }
serde = { workspace = true } # Implement (De)Serializer
serde_with = { workspace = true }
serde_json = { workspace = true }
snafu = { workspace = true }
topo_sort = { workspace = true }
tracing = { workspace = true } # Logger

[dev-dependencies]
quick_tracing = { version = "0.1.5", features = ["derive"] }
pretty_assertions = { workspace = true }

[features]
# default = ["nemesis"] # To debug

# For Nemesis json
# This can be done with pointers or u8... =u64, i8... =i64 to process variable string references,
# which means that a lifetime annotation is generated.
nemesis = []
